<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MultiThreading on linw1995</title>
    <link>https://linw1995.com/en/tags/MultiThreading/</link>
    <description>Recent content in MultiThreading on linw1995</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 14 Mar 2020 00:15:59 +0800</lastBuildDate>
    
	<atom:link href="https://linw1995.com/en/tags/MultiThreading/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Run Asyncio Event Loop in another thread</title>
      <link>https://linw1995.com/en/blog/Run-Asyncio-Event-Loop-in-another-thread/</link>
      <pubDate>Sat, 14 Mar 2020 00:15:59 +0800</pubDate>
      
      <guid>https://linw1995.com/en/blog/Run-Asyncio-Event-Loop-in-another-thread/</guid>
      <description>When using a web framework not supports to write concurrent code using the async/await syntax, want to use concurrent to speed the connection up with another service, like connecting Redis, making a lot of requests, etc. So it&amp;rsquo;s why we need to run the asyncio event loop in another thread.
Create a thread that runs asyncio event loop forever Attention, This example is not fully tested.
import asyncio import threading class AsyncioEventLoopThread(threading.</description>
    </item>
    
  </channel>
</rss>