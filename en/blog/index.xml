<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on linw1995</title>
    <link>https://linw1995.com/en/blog/</link>
    <description>Recent content in Blog on linw1995</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 14 Mar 2020 00:15:59 +0800</lastBuildDate>
    
	<atom:link href="https://linw1995.com/en/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Run Asyncio Event Loop in another thread</title>
      <link>https://linw1995.com/en/blog/Run-Asyncio-Event-Loop-in-another-thread/</link>
      <pubDate>Sat, 14 Mar 2020 00:15:59 +0800</pubDate>
      
      <guid>https://linw1995.com/en/blog/Run-Asyncio-Event-Loop-in-another-thread/</guid>
      <description>When using a web framework not supports to write concurrent code using the async/await syntax, want to use concurrent to speed the connection up with another service, like connecting Redis, making a lot of requests, etc. So it&amp;rsquo;s why we need to run the asyncio event loop in another thread.
Create a thread that runs asyncio event loop forever Attention, This example is not fully tested.
import asyncio import threading class AsyncioEventLoopThread(threading.</description>
    </item>
    
    <item>
      <title>How To Override Geolocation on Headless Chrome</title>
      <link>https://linw1995.com/en/blog/How-To-Override-Geolocation-on-Headless-Chrome/</link>
      <pubDate>Fri, 28 Feb 2020 23:59:59 +0800</pubDate>
      
      <guid>https://linw1995.com/en/blog/How-To-Override-Geolocation-on-Headless-Chrome/</guid>
      <description>I googled it and got many methods. I try one by one, almost all of them turn out outdated. Then I find out a solution, use Chrome Devtools Protocol to achieve that.
The small example code below, that it uses the most common tool selenium to execute chrome devtools protocol command.
import time from selenium.webdriver import Chrome, ChromeOptions options = ChromeOptions() options.add_argument(&amp;#34;--headless&amp;#34;) driver = Chrome(options=options) driver.execute_cdp_cmd( &amp;#34;Browser.grantPermissions&amp;#34;, { &amp;#34;origin&amp;#34;: &amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>Run Twisted in another thread</title>
      <link>https://linw1995.com/en/blog/Run-Twisted-in-another-thread/</link>
      <pubDate>Thu, 27 Dec 2018 23:59:59 +0000</pubDate>
      
      <guid>https://linw1995.com/en/blog/Run-Twisted-in-another-thread/</guid>
      <description>Develop a project related to a service project base on Twisted, and consider how to test it. This is a solution. Run Twisted&amp;rsquo;s reactor in another thread and delegating the Twisted functions calling into it.
Use this fixture run a reactor in another thread. Due to the reactor is not restartable, so the fixture&amp;rsquo;s scope is &amp;ldquo;session&amp;rdquo;.
import pytest from twisted.internet import reactor as twisted_reactor @pytest.fixture(scope=&amp;#34;session&amp;#34;, autouse=True) def reactor(): t = threading.</description>
    </item>
    
  </channel>
</rss>