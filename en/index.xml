<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linw1995</title>
    <link>https://linw1995.com/en/</link>
    <description>Recent content on linw1995</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 28 Feb 2020 23:59:59 +0800</lastBuildDate>
    
	<atom:link href="https://linw1995.com/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How To Override Geolocation on Headless Chrome</title>
      <link>https://linw1995.com/en/blog/How-To-Override-Geolocation-on-Headless-Chrome/</link>
      <pubDate>Fri, 28 Feb 2020 23:59:59 +0800</pubDate>
      
      <guid>https://linw1995.com/en/blog/How-To-Override-Geolocation-on-Headless-Chrome/</guid>
      <description>I googled it and got many methods. I try one by one, almost all of them turn out outdated. Then I find out a solution, use Chrome Devtools Protocol to achieve that.
The small example code below, that it uses the most common tool selenium to execute chrome devtools protocol command.
import time from selenium.webdriver import Chrome, ChromeOptions options = ChromeOptions() options.add_argument(&amp;#34;--headless&amp;#34;) driver = Chrome(options=options) driver.execute_cdp_cmd( &amp;#34;Browser.grantPermissions&amp;#34;, { &amp;#34;origin&amp;#34;: &amp;#34;https://www.</description>
    </item>
    
    <item>
      <title>JSONPath</title>
      <link>https://linw1995.com/en/projects/jsonpath/</link>
      <pubDate>Sat, 09 Nov 2019 21:11:36 +0800</pubDate>
      
      <guid>https://linw1995.com/en/projects/jsonpath/</guid>
      <description>A selector expression for extracting data from JSON.
 Repo  </description>
    </item>
    
    <item>
      <title>Data-Extractor</title>
      <link>https://linw1995.com/en/projects/data_extractor/</link>
      <pubDate>Thu, 18 Apr 2019 00:29:50 +0800</pubDate>
      
      <guid>https://linw1995.com/en/projects/data_extractor/</guid>
      <description>Combine XPath, CSS Selectors and JSONPath for Web data extracting.
 Repo Docs  </description>
    </item>
    
    <item>
      <title>Run Twisted in another thread</title>
      <link>https://linw1995.com/en/blog/Run-Twisted-in-another-thread/</link>
      <pubDate>Thu, 27 Dec 2018 23:59:59 +0000</pubDate>
      
      <guid>https://linw1995.com/en/blog/Run-Twisted-in-another-thread/</guid>
      <description>Develop a project related to a service project base on Twisted, and consider how to test it. This is a solution. Run Twisted&amp;rsquo;s reactor in another thread and delegating the Twisted functions calling into it.
Use this fixture run a reactor in another thread. Due to the reactor is not restartable, so the fixture&amp;rsquo;s scope is &amp;ldquo;session&amp;rdquo;.
import pytest from twisted.internet import reactor as twisted_reactor @pytest.fixture(scope=&amp;#34;session&amp;#34;, autouse=True) def reactor(): t = threading.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://linw1995.com/en/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linw1995.com/en/about/</guid>
      <description>  Graduate at Jimei University in Applied Physics Employ at Meitu.Inc as crawler engineer  Links  CodePen Codewars Github PSN Steam Weibo  </description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://linw1995.com/en/license/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://linw1995.com/en/license/</guid>
      <description>This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License.</description>
    </item>
    
  </channel>
</rss>